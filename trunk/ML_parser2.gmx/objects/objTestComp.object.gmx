<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>variables = ds_map_create();

ds_map_add(variables, "globalvariable", 300);
ds_map_add(variables, "pi", pi);
ds_map_add(variables, "e", exp(1));
ds_map_add(variables, "var1", 1);
ds_map_add(variables, "var2", 2);
ds_map_add(variables, "var3", 3);
ds_map_add(variables, "str1", "");
ds_map_add(variables, "str2", "");
ds_map_add(variables, "str3", "hello world");

str = "var1 += var2 = 3*var3 - 2";
myfunc = ML_InitParserCS(variables);
    ML_AddVariable(myfunc, "var1",1, ML_VAL_REAL, false);
    ML_AddVariable(myfunc, "var2",2, ML_VAL_REAL, false);
    ML_AddVariable(myfunc, "var3",3, ML_VAL_REAL, true);
    ML_SetExpression(myfunc, str);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ML_ClearExceptions(myfunc);
//show_message("start");
var s = ML_GetExprString(myfunc);
var c = ML_Compile(myfunc, s);
//show_message("test");
if (!ML_NoException(myfunc)) {
    show_message("error: " + string(ML_LastExceptionString(myfunc)));
} 
var r = ML_Execute(myfunc, c);
if (!ML_NoException(myfunc)) {
    show_message("error: " + string(ML_LastExceptionString(myfunc)));
} else {
    show_message(string(ML_ResObj_GetFinalAnswer(r)));
}
ML_ResObj_Cleanup(r);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
